import Swal from "sweetalert2";

/*!
 * Start Bootstrap - SB Admin 2 v4.1.3 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */


!(function (l) {
    "use strict";
    l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) {
        l("body").toggleClass("sidebar-toggled"),
            l(".sidebar").toggleClass("toggled"),
            l(".sidebar").hasClass("toggled") &&
                l(".sidebar .collapse").collapse("hide");
    }),
        l(window).resize(function () {
            l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"),
                l(window).width() < 480 &&
                    !l(".sidebar").hasClass("toggled") &&
                    (l("body").addClass("sidebar-toggled"),
                    l(".sidebar").addClass("toggled"),
                    l(".sidebar .collapse").collapse("hide"));
        }),
        l("body.fixed-nav .sidebar").on(
            "mousewheel DOMMouseScroll wheel",
            function (e) {
                var o;
                768 < l(window).width() &&
                    ((o = (o = e.originalEvent).wheelDelta || -o.detail),
                    (this.scrollTop += 30 * (o < 0 ? 1 : -1)),
                    e.preventDefault());
            }
        ),
        l(document).on("scroll", function () {
            100 < l(this).scrollTop()
                ? l(".scroll-to-top").fadeIn()
                : l(".scroll-to-top").fadeOut();
        }),
        l(document).on("click", "a.scroll-to-top", function (e) {
            var o = l(this);
            l("html, body")
                .stop()
                .animate(
                    { scrollTop: l(o.attr("href")).offset().top },
                    1e3,
                    "easeInOutExpo"
                ),
                e.preventDefault();
        });
})(jQuery);



new MultiSelectTag("amenities"); // properyty amenities multi select drop down


//Multi delete front end logic and swal alerts confirmation
$(document).ready(function () {
    // datatable initialization
    $("#dataTable").DataTable();
    // checkbox Multi rows delete logic
    $("#master").on("click", function (e) {
        if ($(this).is(":checked", true)) {
            $(".sub_chk").prop("checked", true);
        } else {
            $(".sub_chk").prop("checked", false);
        }
    });
    $(".delete_all").on("click", function (e) {
        var allVals = [];
        $(".sub_chk:checked").each(function () {
            allVals.push($(this).attr("data-id"));
        });
        if (allVals.length <= 0 || allVals == undefined) {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Please select row !",
            });
        } else {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    var join_selected_values = allVals.join(",");

                    axios
                        .delete($(this).data("url"), {
                            params: { ids: join_selected_values },
                        })
                        .then(function (response) {
                            $(".checkbox:checked").each(function () {
                                $(this).parents("tr").remove();
                            });
                            $(".sub_chk").prop("checked", false);
                            $("#master").prop("checked", false);
                            Swal.fire({
                                title: "Success",
                                text: "Selectd row(s) has been Deleted!",
                            });
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }
            });
        }
    });
});

